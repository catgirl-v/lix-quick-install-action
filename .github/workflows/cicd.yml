name: CI/CD

on:
  pull_request:
  push:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    strategy:
      fail-fast: true
      matrix:
        os:
          - ubuntu-22.04
          - ubuntu-24.04-arm
          - macos-15
          - macos-13
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: canidae-solutions/lix-quick-install-action@v2
        with:
          lix_archives_url: https://github.com/canidae-solutions/lix-quick-install-action/releases/download/v3.0.0
          lix_version: 2.93.0
      - uses: cachix/cachix-action@v16
        with:
          name: catgirl-v
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
      - name: Fix Lix tests
        if: matrix.os == 'ubuntu-24.04-arm'
        run: |
          sudo sysctl -w kernel.apparmor_restrict_unprivileged_userns=0
          sudo sysctl -w kernel.apparmor_restrict_unprivileged_unconfined=0
      - name: Build Lix archives
        id: build-lix-archives
        run: |
          nix build -L -f default.nix combinedArchives
          echo "result=$(readlink result)" >> "$GITHUB_OUTPUT"
      - uses: actions/upload-artifact@v4
        with:
          name: lix-archives-${{ runner.os }}-${{ runner.arch }}
          path: ${{ steps.build-lix-archives.outputs.result }}/

  test:
    needs: build
    strategy:
      fail-fast: true
      matrix:
        os:
          - ubuntu-22.04
          - ubuntu-24.04-arm
          - macos-15
          - macos-13
        version:
          - 2.93.0
          - 2.92.0
          - 2.91.1
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        id: lix-archives
        with:
          name: lix-archives-${{ runner.os }}-${{ runner.arch }}
      - uses: ./
        with:
          lix_archives_url: file://${{steps.lix-archives.outputs.download-path}}
          lix_version: ${{ matrix.version }}
          lix_on_tmpfs: true
      - name: Test nix
        run: nix-build -v --version
      - name: Add to store
        run: |
          file="$RANDOM"
          echo "$RANDOM" > "$file"
          path="$(nix-store --add "./$file")"

  test-cachix:
    needs: build
    strategy:
      fail-fast: true
      matrix:
        os:
          - ubuntu-22.04
          - ubuntu-24.04-arm
          - macos-15
          - macos-13
        version:
          - 2.93.0
          - 2.92.0
          - 2.91.1
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        id: lix-archives
        with:
          name: lix-archives-${{ runner.os }}-${{ runner.arch }}
      - uses: ./
        with:
          lix_archives_url: file://${{steps.lix-archives.outputs.download-path}}
          lix_version: ${{ matrix.version }}
      - uses: cachix/cachix-action@v16
        with:
          name: catgirl-v
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
          skipPush: true
      - name: Verify nix config
        run: |
          if ! egrep -q "^substituters = https://cache.nixos.org https://catgirl-v.cachix.org$" "$HOME/.config/nix/nix.conf"; then
            echo "Invalid substituters config"
            exit 1
          fi
      - name: Push to Cachix
        if: github.event_name == 'push' && github.repository_owner == 'catgirl-v'
        run: |
          dd if=/dev/urandom of=random count=1
          cachix push catgirl-v "$(nix add-to-store random)"

  release:
    runs-on: ubuntu-latest
    needs:
      - build
      - test
      - test-cachix
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: lix-archives-Linux-X64
          path: /tmp/archives
      - uses: actions/download-artifact@v4
        with:
          name: lix-archives-Linux-ARM64
          path: /tmp/archives
      - uses: actions/download-artifact@v4
        with:
          name: lix-archives-macOS-X64
          path: /tmp/archives
      - uses: actions/download-artifact@v4
        with:
          name: lix-archives-macOS-ARM64
          path: /tmp/archives
      - uses: ./
        with:
          lix_archives_url: file:///tmp/archives
          lix_version: 2.92.0
      - uses: cachix/cachix-action@v16
        with:
          name: catgirl-v
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
      - name: Build release script
        run: nix build -f default.nix releaseScript
      - name: Release if needed
        run: ./result/bin/release /tmp/archives ./RELEASE
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
